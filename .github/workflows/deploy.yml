name: Build and Deploy Docker Image to AWS

on:
  push:
    branches:
      - main
      - qa

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del c√≥digo fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-website:${{ github.ref_name }} .

      # 4. Push Docker Image
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-website:${{ github.ref_name }}

  deploy-qa:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'qa'
    steps:
      # Deploy to QA environment
      - name: Deploy to QA
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.QA_LB_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-website:qa
            docker stop my-website || true
            docker rm my-website || true
            docker run -d --name my-website -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-website:qa

  deploy-main:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'main'
    steps:
      # Deploy to Main environment
      - name: Deploy to Main
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.MAIN_LB_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-website:main
            docker stop my-website || true
            docker rm my-website || true
            docker run -d --name my-website -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-website:main
